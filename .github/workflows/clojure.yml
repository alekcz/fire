name: master

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache deps
      uses: actions/cache@v4
      id: cache-deps
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('project.clj') }}
        restore-keys: |
              ${{ runner.os }}-maven-

    - name: Cache GraalVM Java-11
      uses: actions/cache@v4
      id: cache-graalvm-11
      with:
        path: ~/graalvm-ce-java11-22.0.0.2
        key: ${{ runner.os }}-graalvm-22.0.0.2
        restore-keys: |
              ${{ runner.os }}-graalvm-22.0.0.2

    - name: Download GraalVM Java-11
      run: |
        cd ~
        if ! [ -d graalvm-ce-java11-22.0.0.2 ]; then
          curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.0.0.2/graalvm-ce-java11-linux-amd64-22.0.0.2.tar.gz
          tar xzf graalvm-ce-java11-linux-amd64-22.0.0.2.tar.gz
        fi 

    - name: Cache GraalVM Java-8
      uses: actions/cache@v4
      id: cache-graalvm-8
      with:
        path: ~/graalvm-ce-java8-20.3.2
        key: ${{ runner.os }}-graalvm-20.3.2
        restore-keys: |
              ${{ runner.os }}-graalvm-20.3.2

    - name: Download GraalVM Java-8
      run: |
        cd ~
        if ! [ -d graalvm-ce-java8-20.2.0 ]; then
          curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.3.2/graalvm-ce-java8-linux-amd64-20.3.2.tar.gz
          tar xzf graalvm-ce-java8-linux-amd64-20.3.2.tar.gz
        fi     

    - name: Cache emulator
      uses: actions/cache@v4
      id: cache-deps-fb
      with:
        path: ~/.cache/firebase/emulators
        key: ${{ runner.os }}-fb-${{ hashFiles('firebase.json') }}
        restore-keys: |

    - name: Run tests
      env: 
        FIRE: ${{ secrets.FIRE }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        NPM_CONFIG_PREFIX: ~/.npm-global
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        VISION_API: ${{ secrets.VISION_API }}
      run: |
        mkdir -p ~/.npm-global
        npm config set prefix '~/.npm-global'
        export PATH=~/.npm-global/bin:$PATH
        source ~/.profile
        npm install -g firebase-tools@8.5.0
        # bash ./ci.sh
        # bash <(curl -s https://codecov.io/bash)

    - name: Build native image Java-11
      env:
        _JAVA_OPTIONS: -Xmx7g
        FIRE: ${{ secrets.FIRE }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      run: |
        export GRAALVM_HOME=~/graalvm-ce-java11-22.0.0.2
        export JAVA_HOME=~/graalvm-ce-java11-22.0.0.2/Contents/Home
        export PATH=$JAVA_HOME/bin:$PATH
        export PATH=$GRAALVM_HOME/bin:$PATH
        java -version
        gu install native-image
        bash ./graaltest.sh

    - name: Build native image Java-8
      env:
        _JAVA_OPTIONS: -Xmx7g
        FIRE: ${{ secrets.FIRE }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      run: |
        export GRAALVM_HOME=~/graalvm-ce-java8-20.3.2
        export JAVA_HOME=~/graalvm-ce-java8-20.3.2/Contents/Home
        export PATH=$JAVA_HOME/bin:$PATH
        export PATH=$GRAALVM_HOME/bin:$PATH
        java -version
        gu install native-image
        bash ./graaltest.sh
