name: master

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Cache deps
      uses: actions/cache@v1
      id: cache-deps
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('project.clj') }}
        restore-keys: |
              ${{ runner.os }}-maven-

    - name: Cache GraalVM
      uses: actions/cache@v1
      id: cache-graalvm
      with:
        path: ~/graalvm-ce-java8-20.2.0
        key: ${{ runner.os }}-graalvm-20.2.0
        restore-keys: |
              ${{ runner.os }}-graalvm-20.2.0

    - name: Download GraalVM
      run: |
        cd ~
        if ! [ -d graalvm-ce-java8-20.2.0 ]; then
          curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.2.0/graalvm-ce-java8-linux-amd64-20.2.0.tar.gz
          tar xzf graalvm-ce-java8-linux-amd64-20.2.0.tar.gz
        fi 

    - name: Build native image
      env:
        _JAVA_OPTIONS: -Xmx6g
        FIRE: ${{ secrets.FIRE }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      run: |
        export GRAALVM_HOME=~/graalvm-ce-java8-20.2.0
        export JAVA_HOME=~/graalvm-ce-java8-20.2.0/Contents/Home
        export PATH=$JAVA_HOME/bin:$PATH
        export PATH=$GRAALVM_HOME/bin:$PATH
        java -version
        gu install native-image
        bash ./graaltest.sh

    - name: Run tests
      env: 
        FIRE: ${{ secrets.FIRE }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        NPM_CONFIG_PREFIX: ~/.npm-global
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        mkdir -p ~/.npm-global
        npm config set prefix '~/.npm-global'
        export PATH=~/.npm-global/bin:$PATH
        source ~/.profile
        npm install -g firebase-tools@8.5.0
        bash ./ci.sh
        bash <(curl -s https://codecov.io/bash)


        